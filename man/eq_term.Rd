% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eq_term.R
\name{eq_term}
\alias{eq_term}
\title{Constructor for \code{eq_term} class}
\usage{
eq_term(
  .term = NA_character_,
  .estimate = NA_real_,
  .variable = new_eq_variable(),
  .suffix = new_eq_variable()
)
}
\arguments{
\item{.term}{A character representing the term name.}

\item{.estimate}{A number. Swaps with \code{variable}.}

\item{.variable}{A \code{eq_variable}. Represents the main variable when not using a coefficient. Swaps with \code{estimate}.}

\item{.suffix}{A \code{eq_variable}. Unlike \code{.variable} will always be
present immediately after the \code{.estimate} or \code{.variable}.}
}
\value{
A list classed as \code{eq_term}.
}
\description{
Returns a list of class \code{eq_term} and provides for coercion and validation.
}
\details{
The \code{eq_term} class provides the structure for a discrete mathematical unit.
Editing and passing mathematical terms as discrete units allows developers to
focus on combining these terms, rather than on structuring objects.

The primary objective of the class is to render itself, consistently, into
Latex.
}
\examples{
eq_term(term = "sma", estimate = 0.25)

}
\seealso{
\link{new_eq_term} for a low-level constructor.

Other term constructors: 
\code{\link{c_term}()},
\code{\link{eq_equation}()},
\code{\link{eq_line}()}

Other eq_term constructors: 
\code{\link{new_eq_term}()},
\code{\link{validate_eq_term}()}

Other eq_term modifiers: 
\code{\link{apply_property}()},
\code{\link{apply_variable_property}()},
\code{\link{set_property}()},
\code{\link{set_variable_property}()}

Other extensibility functions: 
\code{\link{align_eq}()},
\code{\link{c_term}()},
\code{\link{combine_by}()},
\code{\link{convert2latex}()},
\code{\link{convert2terms}()},
\code{\link{eq_divide}()},
\code{\link{eq_equation}()},
\code{\link{eq_line}()},
\code{\link{eq_variable}()},
\code{\link{flatten_nested}()},
\code{\link{wrap_eq}()}
}
\concept{eq_term constructors}
\concept{eq_term modifiers}
\concept{extensibility functions}
\concept{term constructors}
\keyword{internal}
