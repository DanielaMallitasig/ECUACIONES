% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eq_variable.R
\name{eq_variable}
\alias{eq_variable}
\title{Constructor for \code{eq_variable} class}
\usage{
eq_variable(
  .x = NA_character_,
  .subscript = NA_character_,
  .superscript = NA_character_,
  .italic = TRUE
)
}
\arguments{
\item{.x}{A character representing the variable name..}

\item{.subscript}{A latex-friendly number, character, or \code{eq_term}.}

\item{.superscript}{A latex-friendly number, character, or \code{eq_term}.}

\item{.italic}{A logical. Determines if the variable is italicized. Default is \code{TRUE}.}
}
\value{
A list classed as \code{eq_term}.
}
\description{
Returns a list of class \code{eq_variable} and provides for coercion and validation.
}
\details{
The \code{eq_variable} class provides the structure a single variable. Usually
used in conjunction with \code{eq_term}, the behavior of variables is defined in
this class (e.g. superscripts). Editing and passing mathematical terms as
discrete units allows developers to focus on combining these terms, rather
than on structuring objects.

The primary objective of the class is to render itself, consistently, into
Latex.
}
\examples{
eq_variable(
    name = "\\\\beta", subscript = 2, superscript = "(i)"
)

}
\seealso{
\link{new_eq_variable} for a low-level constructor.

Other eq_variable constructors: 
\code{\link{new_eq_variable}()},
\code{\link{validate_eq_variable}()}

Other extensibility functions: 
\code{\link{align_eq}()},
\code{\link{c_term}()},
\code{\link{combine_by}()},
\code{\link{convert2latex}()},
\code{\link{convert2terms}()},
\code{\link{eq_divide}()},
\code{\link{eq_equation}()},
\code{\link{eq_line}()},
\code{\link{eq_term}()},
\code{\link{flatten_nested}()},
\code{\link{wrap_eq}()}
}
\concept{eq_variable constructors}
\concept{eq_variable modifiers}
\concept{extensibility functions}
\keyword{internal}
