% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_eq.R
\name{extract_eq}
\alias{extract_eq}
\title{LaTeX code for R models}
\usage{
extract_eq(model, ital_vars = FALSE, use_coefs = FALSE)
}
\arguments{
\item{model}{A fitted model}

\item{ital_vars}{Logical, defaults to \code{FALSE}. Should the variable names
not be wrapped in the \code{\\text{}} command?}

\item{use_coefs}{Logical, defaults to \code{FALSE}. Should the actual model
estimates be included in the equation instead of math symbols?}
}
\description{
Extract the variable names from a model to produce a LaTeX equation, which is
output to the screen. Supports any model supported by
\link[broom:tidy]{broom::tidy}.
}
\examples{
# Simple model
mod1 <- lm(mpg ~ cyl + disp, mtcars)
extract_eq(mod1)

# Include all variables
mod2 <- lm(mpg ~ ., mtcars)
extract_eq(mod2)

# Works for categorical variables too, putting levels as subscripts
mod3 <- lm(Sepal.Length ~ Sepal.Width + Species, iris)
extract_eq(mod3)

set.seed(8675309)
d <- data.frame(cat1 = rep(letters[1:3], 100),
                cat2 = rep(LETTERS[1:3], each = 100),
                cont1 = rnorm(300, 100, 1),
                cont2 = rnorm(300, 50, 5),
                out   = rnorm(300, 10, 0.5))
mod4 <- lm(out ~ ., d)
extract_eq(mod4)

# Preview the equation
preview(extract_eq(mod4))

# Don't italicize terms
extract_eq(mod1, ital_vars = FALSE)

# Wrap equations in an "aligned" environment
print(extract_eq(mod2),template='aligned')

# Wider equation wrapping
print(extract_eq(mod2),template='aligned',width = 150)

# Include model estimates instead of Greek letters
extract_eq(mod2, use_coefs = TRUE)

# Use other model types, like glm
set.seed(8675309)
d <- data.frame(out = sample(0:1, 100, replace = TRUE),
                cat1 = rep(letters[1:3], 100),
                cat2 = rep(LETTERS[1:3], each = 100),
                cont1 = rnorm(300, 100, 1),
                cont2 = rnorm(300, 50, 5))
mod5 <- glm(out ~ ., data = d, family = binomial(link = "logit"))

print(extract_eq(mod5),wrap = 120)

}
